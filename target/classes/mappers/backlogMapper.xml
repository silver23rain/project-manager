<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="org.project_manager.BackLogMapper">
    <select id="getMaxBacklogNo" resultType="Integer">
        select max(bl_no)
        from backlog
        where project_id = #{project_id}
    </select>

    <insert id="createBacklog" parameterType="BacklogDTO">
        insert into backlog(bl_no, project_id, bl_title, bl_content, bl_writer, assigned_user)
        values (#{bl_no}, #{project_id}, #{bl_title}, #{bl_content}, #{bl_writer}, #{assigned_user})
    </insert>

    <select id="getBackLogList" resultType="java.util.HashMap">
        select backlog.project_id,bl_no, bl_title, bl_writer,assigned_user ,story_point, project_key,
        backlog_status.bl_status, backlog.sprint_year, backlog.sprint_no
        from backlog join project
        on backlog.project_id = project.project_id
        left join backlog_status
        on backlog.status_id = backlog_status.status_id
        <choose>
            <when test="user_id != null">
                where assigned_user = #{user_id}
                and bl_status is not null
            </when>
            <otherwise>
                where backlog.project_id= #{project_id}
            </otherwise>
        </choose>
    </select>

    <update id="updateBacklog" parameterType="BacklogDTO">
        update backlog
        <set>
            <if test="bl_title== null">
                sprint_no = #{sprint_no}, sprint_year = #{sprint_year}, status_id = #{status_id}
            </if>
            <if test="bl_title !=null">
                bl_title = #{bl_title}, bl_content = #{bl_content}, assigned_user = #{assigned_user}, story_point =
                #{story_point}
            </if>
        </set>
        where project_id = #{project_id}
        and bl_no = #{bl_no}
    </update>

    <update id="updateStatus">
        update backlog
        set status_id = #{status_id}
        where project_id = #{project_id}
        and sprint_year = #{sprint_year}
        and sprint_no = #{sprint_no}
    </update>

    <select id="includeSprintBacklogList" resultType="java.util.HashMap">
      select bl_no, bl_title, bl_writer, assigned_user,user_img, story_point, backlog.status_id, backlog_status.bl_status, project.project_key
        from backlog
        left join backlog_status
        on backlog.status_id = backlog_status.status_id
        join project
        on project.project_id = backlog.project_id
      	left join user
        on user.user_id = backlog.assigned_user
        where (sprint_year,sprint_no,backlog.project_id) IN (
        select sprint_year,sprint_no,backlog.project_id
        from sprint
        where backlog.project_id = #{project_id}
        and sprint_status = "OPEN")
    </select>

    <select id="getBacklogStatus" resultType="java.util.HashMap">
        select * from backlog_status
    </select>

    <select id="backlogDetail" parameterType="java.util.HashMap" resultType="java.util.HashMap">
       select backlog.*, project_name
        from backlog join project
        on backlog.project_id = project.project_id
        where bl_no = #{bl_no}
        and backlog.project_id =#{project_id}
    </select>
</mapper>
